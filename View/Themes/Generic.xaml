<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:s="clr-namespace:zLib;assembly=zLib"
    xmlns:e="clr-namespace:EffectLibrary;assembly=EffectLibrary"
    xmlns:c="clr-namespace:GenealogyResearchApp.View.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" mc:Ignorable="d">

    <!--<Style TargetType="{x:Type c:MenuButton}" BasedOn="{StaticResource DefaultZButtonStyle}">
        <Setter Property="ActiveIcon" Value="White"/>
        <Setter Property="IconWidth" Value="16"/>
        <Setter Property="IconHeight" Value="16"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:MenuButton}">
                    <Grid>
                        <Border x:Name="Bg" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="Icon" Fill="{TemplateBinding Foreground}" OpacityMask="{TemplateBinding Icon}" Width="{TemplateBinding IconWidth}" Height="{TemplateBinding IconHeight}" Margin="2,0"/>
                            <Label Content="{TemplateBinding Content}" FontSize="16" FontWeight="Bold"
                                   Visibility="{Binding IsCollapsed, Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Foreground="{TemplateBinding Foreground}"/>
                        </Grid>
                        -->
    <!--<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>-->
    <!--
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Bg" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsDefaulted" Value="True"/>
                                <Condition Property="BorderThickness" Value="0"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Bg" Property="BorderThickness" Value="1"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsToggled" Value="True">
                            -->
    <!--<Setter TargetName="Bg" Property="Effect">
                                <Setter.Value>
                                    <e:OverlayEffect BlendSolidBrush="{Binding ActiveIcon, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Setter.Value>
                            </Setter>-->
    <!--
                            <Setter TargetName="Icon" Property="OpacityMask" Value="{Binding ActiveIcon, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bg" Property="Effect">
                                <Setter.Value>
                                    <e:OverlayEffect BlendSolidBrush="{Binding Highlight, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bg" Property="Effect">
                                <Setter.Value>
                                    <e:OverlayEffect BlendSolidBrush="{Binding Pressed, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bg" Property="Effect">
                                <Setter.Value>
                                    <e:DesaturateEffect DesaturationFactor=".25"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c:FilterBox}">
        <Setter Property="Background" Value="#FFF1F1F1"/>
        <Setter Property="BorderBrush" Value="#FFD6D6D6"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ToolTip" Value="TextPlaceholder"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True" ClipToBounds="True">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Margin="16,2"
                                          VerticalAlignment="Center"/>
                            <DockPanel Margin="2">
                                <Path x:Name="MG" Data="M8,8 a4,4 0 1 1 0.0001 -0.0001 l3,3"
                                    Stroke="{Binding Foreground, ConverterParameter=.25, Converter={StaticResource BrushOpacityConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                    StrokeThickness="2.5" 
                                    StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                                    HorizontalAlignment="Stretch" Margin="0,2"
                                    VerticalAlignment="Center" Effect="{DynamicResource ThemeShallowShadowEffect}"/>
                                <c:zButton x:Name="Clear" HorizontalAlignment="Right" Height="Auto" Margin="0,2"
                                           Command="{Binding comClearFilter}"
                                           BorderBrush="{x:Null}" Foreground="{x:Null}"
                                           Background="{Binding Foreground, ConverterParameter=.25, Converter={StaticResource BrushOpacityConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                           OpacityMask="{Binding Converter={StaticResource PathToDrawingBrushConverter}, Mode=OneWay, Source={StaticResource z.Erase}}" DockPanel.Dock="Right" Width="12" Effect="{DynamicResource ThemeShallowShadowEffect}"/>
                                <TextBlock x:Name="TextPlaceholder" Visibility="Hidden" Text="{TemplateBinding ToolTip}"
                                    VerticalAlignment="Center"
                                    Margin="2"
                                    Foreground="#FFD6D6D6"/>
                            </DockPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding comClearFilter}" Value="{x:Null}">
                            <Setter TargetName="Clear" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_ContentHost" Property="Margin" Value="20,2,2,2"/>
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" TargetName="TextPlaceholder" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="Clear" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultIconStyle" TargetType="{x:Type c:Icon}">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="OpacityMask" Value="{Binding IconShape, Converter={StaticResource PathToDrawingBrushConverter}, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" OpacityMask="{TemplateBinding OpacityMask}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="SetAltIcon" Value="True">
                <Setter Property="OpacityMask" Value="{Binding AltIconShape, Converter={StaticResource PathToDrawingBrushConverter}, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type c:Icon}" BasedOn="{StaticResource DefaultIconStyle}"/>-->

    <!--<Style x:Key="DefaultTreeView" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="Transparent">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource TreeViewItemStyle}"/>
    </Style>

    <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource DefaultTreeView}"/>

    <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        -->
    <!--<Setter Property="c:TreeViewItemBehavior.IsBroughtIntoViewWhenSelected" Value="True"/>-->
    <!--
        <Setter Property="Background" Value="{Binding Background, Source={RelativeSource TemplatedParent}}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
        <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, Mode=TwoWay}" Style="{DynamicResource ExpandCollapseToggleStyle}"/>
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="Gray"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <e:DesaturateEffect DesaturationFactor=".5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                        <Path x:Name="ExpandPath" Data="M0,0 L0,6 L6,0 z" Fill="#FF595959" Stroke="#FF262626">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#FFFFFFFF"/>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF818181"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF27C7F7"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#FFCCEEFB"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1CC4F7"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#FF82DFFB"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>-->

    <!--<c:PathToDrawingBrushConverter x:Key="PathToDrawingBrushConverter"/>
    <c:BrushOpacityConverter x:Key="BrushOpacityConverter"/>
    <c:BrushOverlayConverter x:Key="BrushOverlayConverter"/>
    <c:SolidColorBrushToColorConverter x:Key="SolidColorBrushToColorConverter"/>
    <s:UVMCommandHostToUVMCommandConverter x:Key="UVMCommandHostToUVMCommandConverter"/>-->
    <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />

    <!-- http://paletton.com/#uid=c3x0I1b0f0klllz2zTZc3uWuFcbTj2v -->

    <SolidColorBrush x:Key="Pallete.Primary" Color="#2A516E"/>
    <SolidColorBrush x:Key="Pallete.Primary.Darker" Color="#07263E"/>
    <SolidColorBrush x:Key="Pallete.Primary.Darkest" Color="#00070D"/>
    <SolidColorBrush x:Key="Pallete.Primary.Brighter" Color="#67869F"/>
    <SolidColorBrush x:Key="Pallete.Primary.Brightest" Color="#DAE3EB"/>

    <SolidColorBrush x:Key="Pallete.Complementary" Color="#AC7B39"/>
    <SolidColorBrush x:Key="Pallete.Complementary.Darker" Color="#613904"/>
    <SolidColorBrush x:Key="Pallete.Complementary.Darkest" Color="#140B00"/>
    <SolidColorBrush x:Key="Pallete.Complementary.Brighter" Color="#F6CF9A"/>
    <SolidColorBrush x:Key="Pallete.Complementary.Brightest" Color="#FFF6EB"/>

    <SolidColorBrush x:Key="Pallete.Secondary" Color="#AC8F39"/>
    <SolidColorBrush x:Key="Pallete.Secondary.Darker" Color="#614A04"/>
    <SolidColorBrush x:Key="Pallete.Secondary.Darkest" Color="#140F00"/>
    <SolidColorBrush x:Key="Pallete.Secondary.Brighter" Color="#F6DF9A"/>
    <SolidColorBrush x:Key="Pallete.Secondary.Brightest" Color="#FFFAEB"/>

    <SolidColorBrush x:Key="Pallete.Tretiary" Color="#AC5A39"/>
    <SolidColorBrush x:Key="Pallete.Tretiary.Darker" Color="#611F04"/>
    <SolidColorBrush x:Key="Pallete.Tretiary.Darkest" Color="#140600"/>
    <SolidColorBrush x:Key="Pallete.Tretiary.Brighter" Color="#F6B49A"/>
    <SolidColorBrush x:Key="Pallete.Tretiary.Brightest" Color="#FFF0EB"/>

    <Style x:Key="DefaultZButtonStyle" TargetType="{x:Type c:zButton}">
        <Setter Property="Highlight" Value="#88577697"/>
        <Setter Property="Pressed" Value="#88102E4F"/>
        <Setter Property="Background" Value="{DynamicResource Pallete.Primary}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Pallete.Primary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:zButton}">
                    <Grid>
                        <Border x:Name="Bg" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter x:Name="contentPresenter"
												  ContentTemplate="{TemplateBinding ContentTemplate}"
												  Content="{TemplateBinding Content}"
												  ContentStringFormat="{TemplateBinding ContentStringFormat}"
												  Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Bg" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bg" Property="Effect">
                                <Setter.Value>
                                    <e:OverlayEffect BlendSolidBrush="{Binding Highlight, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bg" Property="Effect">
                                <Setter.Value>
                                    <e:OverlayEffect BlendSolidBrush="{Binding Pressed, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bg" Property="Effect">
                                <Setter.Value>
                                    <e:DesaturateEffect DesaturationFactor=".25"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!--<EventTrigger RoutedEvent="MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:10" Storyboard.TargetProperty="Effect.Blend" To="{Binding Highlight, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource SolidColorBrushToColorConverter}}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>-->

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultEmptyZButtonStyle" TargetType="{x:Type c:zButton}" BasedOn="{StaticResource DefaultZButtonStyle}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <Style TargetType="{x:Type c:zButton}" BasedOn="{StaticResource DefaultZButtonStyle}"/>

    <!--<Style TargetType="{x:Type c:PVStructuralTreeView}" BasedOn="{StaticResource {x:Type TreeView}}">
        <Setter Property="PVEmploeeTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type s:PVEmploee}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Name}"/>
                        <TextBlock Text="{Binding Surname}" Margin="5,0,0,0" Grid.Column="1"/>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="PVStructuralTemplate">
            <Setter.Value>
                <HierarchicalDataTemplate DataType="{x:Type s:PVStructural}" ItemsSource="{Binding PVNodes}">
                    <TextBlock Text="{Binding Name}"/>
                </HierarchicalDataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="UUserTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type s:UUser}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="NameTB" Text="{Binding Name}"/>
                        <TextBlock x:Name="SurnameTB" Text="{Binding Surname}" Grid.Column="1"/>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Hide}" Value="True">
                            <Setter TargetName="NameTB" Property="Foreground" Value="Gray"/>
                            <Setter TargetName="SurnameTB" Property="Foreground" Value="Gray"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DepartmentExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent">
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Center" ClipToBounds="True" Width="7">
                            <Path Data="M0,0 l6.5,6.5 l-6.5,6.5" StrokeThickness="2"
									  Stroke="{TemplateBinding Foreground}"/>
                            <Path Data="M0,1.5 l5,5 l-5,5" Fill="#FFD6D6D6"/>
                            <Path x:Name="Fill" Data="M0,1.5 l5,5 l-5,5"
									  Fill="{TemplateBinding Background}"/>
                            <Path x:Name="Shadow" Data="M-.5,1.6 l5.2,5.2" Stroke="{TemplateBinding BorderBrush}"
									  StrokeThickness="1"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="Fill" Value="#FF9696FF"/>
                            <Setter Property="Stroke" TargetName="Shadow" Value="#888585DA"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="Fill" Value="#FF9696FF"/>
                            <Setter Property="Stroke" TargetName="Shadow" Value="#888585DA"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="Fill" Value="#FF9696FF"/>
                            <Setter Property="Stroke" TargetName="Shadow" Value="#FF9E9E9E"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="#80000000"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalGridSplitter" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch">
                        <!--<Path x:Name="p" Width="Auto" Height="Auto" Canvas.Left="20" Canvas.Top="23" Stretch="Fill" Fill="{DynamicResource Pallete.Primary.Darkest}" 
                              Data="M 1,3.8147e-006C 1.55229,3.8147e-006 2,0.44772 2,1C 2,1.55229 1.55228,2 1,2C 0.447715,2 -7.94729e-008,1.55229 -7.94729e-008,1C -7.94729e-008,0.44772 0.447713,3.8147e-006 1,3.8147e-006 Z M 1,3.00001C 1.55229,3.00001 2,3.44772 2,4.00001C 2,4.5523 1.55228,5.00001 1,5.00001C 0.447715,5.00001 -7.94728e-008,4.5523 -7.94728e-008,4.00001C -7.94728e-008,3.44772 0.447713,3.00001 1,3.00001 Z M 1,6C 1.55229,6 2,6.44772 2,7C 2,7.55229 1.55228,8 1,8C 0.447715,8 -7.94728e-008,7.55229 -7.94728e-008,7C -7.94728e-008,6.44772 0.447713,6 1,6 Z "
                              RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
                        <Path Data="F1 M1,0 l0,2 m-1,-1 l2,0 M1,4 l0,2 m-1,-1 l2,0 M1,8 l0,2 m-1,-1 l2,0" Stroke="{Binding ConverterParameter=.8, Converter={StaticResource BrushOpacityConverter}, Source={StaticResource Pallete.Primary.Darkest}}" HorizontalAlignment="Center" VerticalAlignment="Center" ClipToBounds="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SCROLL VIEWER -->
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}" d:DesignWidth="170.131" d:DesignHeight="145.514" ScrollViewer.HorizontalScrollBarVisibility="Visible" ClipToBounds="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter
                            x:Name="PART_ScrollContentPresenter"
                            CanContentScroll="{TemplateBinding CanContentScroll}"
                            CanHorizontallyScroll="False" CanVerticallyScroll="False"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Content="{TemplateBinding Content}"
                            Margin="{TemplateBinding Padding}" Grid.RowSpan="2" Grid.ColumnSpan="2"/>
                        <Border BorderBrush="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0,10" Margin="0,-5">
                            <Border.Effect>
                                <BlurEffect Radius="10"/>
                            </Border.Effect>
                        </Border>
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            AutomationProperties.AutomationId="VerticalScrollBar"
                            Cursor="Arrow" Grid.Column="1"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Minimum="0" Grid.Row="0"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Opacity="0"
                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Style="{DynamicResource ScrollBar}"/>
                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Orientation="Horizontal"
                            AutomationProperties.AutomationId="HorizontalScrollBar"
                            Cursor="Arrow" Grid.Column="0"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Minimum="0" Grid.Row="1"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Opacity="0"
                            Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Style="{DynamicResource ScrollBar}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="UIElement.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:30" Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="100"/>
                                    <DoubleAnimation Duration="0:0:30" Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="100"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.300" Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0"/>
                                    <DoubleAnimation Duration="0:0:0.300" Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Effect" Value="{DynamicResource ThemeShallowShadowEffect}"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="8" />
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid >
                                <Track 
				                    x:Name="PART_Track"
				                    Grid.Row="1"
				                    IsDirectionReversed="False">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Visibility="Hidden" Command="ScrollBar.PageUpCommand" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{DynamicResource ScrollBarThumb}" Margin="1,0,1,0"/>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Visibility="Hidden" Command="ScrollBar.PageDownCommand" />
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="8"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid >
                                <Track 
				                    x:Name="PART_Track"
				                    Grid.Column="1"
				                    IsDirectionReversed="True">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageLeftCommand" Background="{x:Null}" BorderBrush="{x:Null}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{DynamicResource ScrollBarThumb}" Margin="0,1,0,1"/>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton  Command="ScrollBar.PageRightCommand" Background="{x:Null}" BorderBrush="{x:Null}" />
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border 
						CornerRadius="0"
						Background="#66000000"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="NavigationWindowNavigationChromeBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFFFFF" Offset="0"/>
        <GradientStop Color="#E3E8F4" Offset="0.5"/>
        <GradientStop Color="#CFD7EB" Offset="0.5"/>
        <GradientStop Color="#E9ECFA" Offset="1.0"/>
    </LinearGradientBrush>
    <JournalEntryUnifiedViewConverter x:Key="JournalEntryUnifiedViewConverter"/>
    <SolidColorBrush x:Key="CurrentEntryBackground" Color="{StaticResource {x:Static SystemColors.HighlightColorKey}}" Opacity="0.25"/>
    <Style x:Key="NavigationWindowNavigationButtonJournalEntryStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Header" Value="{Binding (JournalEntry.Name)}"/>
        <Setter Property="Command" Value="NavigationCommands.NavigateJournal"/>
        <Setter Property="CommandTarget" Value="{Binding TemplatedParent, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}"/>
        <Setter Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="{Binding (JournalEntryUnifiedViewConverter.JournalEntryPosition)}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid x:Name="Panel" SnapsToDevicePixels="true" Background="Transparent">
                        <Path x:Name="Glyph" Width="10" StrokeThickness="2" Stroke="{TemplateBinding Foreground}" StrokeEndLineCap="Triangle" SnapsToDevicePixels="false" StrokeStartLineCap="Triangle" Margin="7,5" Height="10" HorizontalAlignment="Left"/>
                        <ContentPresenter ContentSource="Header" Margin="24,5,21,5"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Current">
                            <Setter Property="Background" TargetName="Panel" Value="{StaticResource CurrentEntryBackground}"/>
                            <Setter Property="Data" TargetName="Glyph" Value="M 0,5 L 2.5,8 L 7,3 "/>
                            <Setter Property="FlowDirection" TargetName="Glyph" Value="LeftToRight"/>
                            <Setter Property="StrokeLineJoin" TargetName="Glyph" Value="Miter"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            <Setter Property="Background" TargetName="Panel" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Forward"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="Glyph" Value="White"/>
                            <Setter Property="Data" TargetName="Glyph" Value="M 1,5 L 7,5 M 5,1 L 9,5 L 5,9"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Back"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="Glyph" Value="White"/>
                            <Setter Property="Data" TargetName="Glyph" Value="M 9,5 L 3,5 M 5,1 L 1,5 L 5,9"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="NavigationWindowDownArrowFill" EndPoint="0,1" StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#33B5DA" Offset="0"/>
                <GradientStop Color="#335799" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style x:Key="NavigationWindowMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding (MenuItem.IsSubmenuOpen), RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="2">
                            <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                <Border x:Name="SubMenuBorder" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}">
                                    <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="2" KeyboardNavigation.TabNavigation="Cycle"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Themes:SystemDropShadowChrome>
                        </Popup>
                        <Grid x:Name="Panel" Background="Transparent" HorizontalAlignment="Right" Width="26">
                            <Border x:Name="HighlightBorder" BorderBrush="#B0B5BACE" BorderThickness="1,1,1,1" CornerRadius="2" SnapsToDevicePixels="True" Visibility="Hidden">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#20DDDDDD" Offset="0"/>
                                        <GradientStop Color="#80FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="#A0FFFFFF" BorderThickness="1" CornerRadius="1.5"/>
                            </Border>
                            <Path x:Name="Arrow" Data="M 0 0 L 4.5 5 L 9 0 Z" Fill="{StaticResource NavigationWindowDownArrowFill}" HorizontalAlignment="Right" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="false" Stroke="White" StrokeThickness="1" StrokeLineJoin="Round" VerticalAlignment="Center"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Visibility" TargetName="HighlightBorder" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Arrow" Value="#A5AABE"/>
                        </Trigger>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                            <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true"/>
                            <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavigationWindowMenu" TargetType="{x:Type Menu}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <DockPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="IsMainMenu" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <ItemsPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillDisabled" EndPoint="0.5,1.0" StartPoint="0.5,0.0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFFFFF" Offset="0"/>
                <GradientStop Color="#EBEEF5" Offset="0.5"/>
                <GradientStop Color="#D8DDEB" Offset="0.5"/>
                <GradientStop Color="#DFE2F0" Offset="1.0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillHover" EndPoint="0.5,1.0" StartPoint="0.5,0.0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFFFFF" Offset="0.0"/>
                <GradientStop Color="#DFEDF9" Offset="0.1"/>
                <GradientStop Color="#3086E1" Offset="0.47"/>
                <GradientStop Color="#003B91" Offset="0.47"/>
                <GradientStop Color="#1793EF" Offset="0.70"/>
                <GradientStop Color="#5AD4FF" Offset="0.85"/>
                <GradientStop Color="#BDFFFF" Offset="0.95"/>
                <GradientStop Color="#FFFFFF" Offset="1.0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillPressed" EndPoint="0.5,1.0" StartPoint="0.5,0.0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#C0D2F5" Offset="0.0"/>
                <GradientStop Color="#5E7A9C" Offset="0.47"/>
                <GradientStop Color="#00062D" Offset="0.47"/>
                <GradientStop Color="#005F9F" Offset="0.70"/>
                <GradientStop Color="#1FA4E2" Offset="0.85"/>
                <GradientStop Color="#61DAFF" Offset="0.95"/>
                <GradientStop Color="#48CFFF" Offset="1.0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillEnabled" EndPoint="0.5,1.0" StartPoint="0.5,0.0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFFFFF" Offset="0.0"/>
                <GradientStop Color="#CCD4E9" Offset="0.1"/>
                <GradientStop Color="#4881D2" Offset="0.47"/>
                <GradientStop Color="#001A5A" Offset="0.47"/>
                <GradientStop Color="#007BD6" Offset="0.70"/>
                <GradientStop Color="#54DAFF" Offset="0.85"/>
                <GradientStop Color="#86FFFF" Offset="0.95"/>
                <GradientStop Color="#FFFFFF" Offset="1.0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonStrokeEnabled" EndPoint="0,1" StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#6C90C4" Offset="0"/>
                <GradientStop Color="#315BB4" Offset="0.5"/>
                <GradientStop Color="#002091" Offset="0.5"/>
                <GradientStop Color="#08377C" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NavigationWindowNavigationArrowFill" EndPoint="0,1" StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFFFFF" Offset="0.5"/>
                <GradientStop Color="#EEEEEE" Offset="0.5"/>
                <GradientStop Color="#B0B0B0" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NavigationWindowNavigationArrowStrokeEnabled" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#8AB1FB" Offset="0"/>
        <GradientStop Color="#002874" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="NavigationWindowBackButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Command" Value="NavigationCommands.BrowseBack"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent" Height="24" Width="24">
                        <Ellipse x:Name="Circle" Fill="{StaticResource NavigationWindowNavigationButtonFillEnabled}" Stroke="{StaticResource NavigationWindowNavigationButtonStrokeEnabled}" StrokeThickness="1"/>
                        <Path x:Name="Arrow" Data="M0.37,7.69 L5.74,14.20 A1.5,1.5,0,1,0,10.26,12.27 L8.42,10.42 14.90,10.39 A1.5,1.5,0,1,0,14.92,5.87 L8.44,5.90 10.31,4.03 A1.5,1.5,0,1,0,5.79,1.77 z" Fill="{StaticResource NavigationWindowNavigationArrowFill}" HorizontalAlignment="Center" Stroke="{StaticResource NavigationWindowNavigationArrowStrokeEnabled}" StrokeThickness="0.75" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Circle" Value="{StaticResource NavigationWindowNavigationButtonFillDisabled}"/>
                            <Setter Property="Stroke" TargetName="Circle" Value="#B5BACE"/>
                            <Setter Property="Stroke" TargetName="Arrow" Value="#B0B5BACE"/>
                            <Setter Property="Fill" TargetName="Arrow" Value="#D0FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Circle" Value="{StaticResource NavigationWindowNavigationButtonFillHover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="Circle" Value="{StaticResource NavigationWindowNavigationButtonFillPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavigationWindowForwardButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Command" Value="NavigationCommands.BrowseForward"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent" Height="24" Width="24">
                        <Ellipse x:Name="Circle" Grid.Column="0" Fill="{StaticResource NavigationWindowNavigationButtonFillEnabled}" Stroke="{StaticResource NavigationWindowNavigationButtonStrokeEnabled}" StrokeThickness="1"/>
                        <Path x:Name="Arrow" Grid.Column="0" Data="M0.37,7.69 L5.74,14.20 A1.5,1.5,0,1,0,10.26,12.27 L8.42,10.42 14.90,10.39 A1.5,1.5,0,1,0,14.92,5.87 L8.44,5.90 10.31,4.03 A1.5,1.5,0,1,0,5.79,1.77 z" Fill="{StaticResource NavigationWindowNavigationArrowFill}" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0" Stroke="{StaticResource NavigationWindowNavigationArrowStrokeEnabled}" StrokeThickness="0.75" VerticalAlignment="Center">
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX="-1"/>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Circle" Value="{StaticResource NavigationWindowNavigationButtonFillDisabled}"/>
                            <Setter Property="Stroke" TargetName="Circle" Value="#B5BACE"/>
                            <Setter Property="Stroke" TargetName="Arrow" Value="#B0B5BACE"/>
                            <Setter Property="Fill" TargetName="Arrow" Value="#D0FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Circle" Value="{StaticResource NavigationWindowNavigationButtonFillHover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="Circle" Value="{StaticResource NavigationWindowNavigationButtonFillPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="FrameNavChromeTemplateKey" TargetType="{x:Type Frame}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
            <DockPanel>
                <Grid Background="{StaticResource NavigationWindowNavigationChromeBackground}" DockPanel.Dock="Top" Height="22">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="16"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Menu x:Name="NavMenu" Grid.ColumnSpan="3" Height="16" Margin="1,0,0,0" Style="{StaticResource NavigationWindowMenu}" VerticalAlignment="Center">
                        <MenuItem ItemContainerStyle="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle}" Padding="0,2,4,0" Style="{StaticResource NavigationWindowMenuItem}">
                            <MenuItem.ItemsSource>
                                <MultiBinding Converter="{StaticResource JournalEntryUnifiedViewConverter}">
                                    <Binding Path="BackStack" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ForwardStack" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </MenuItem.ItemsSource>
                        </MenuItem>
                    </Menu>
                    <Path Grid.ColumnSpan="3" Grid.Column="0" Data="M22.5767,21.035 Q27,19.37 31.424,21.035 A12.5,12.5,0,0,0,53.5,13 A12.5,12.5,0,0,0,37.765,0.926 Q27,4.93 16.235,0.926 A12.5,12.5,0,0,0,0.5,13 A12.5,12.5,0,0,0,22.5767,21.035 z" HorizontalAlignment="Left" IsHitTestVisible="false" Margin="2,0,0,0" SnapsToDevicePixels="false" StrokeThickness="1" VerticalAlignment="Center">
                        <Path.Fill>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#A0C2CCE7" Offset="0"/>
                                        <GradientStop Color="#60FFFFFF" Offset="1"/>
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Path.Fill>
                        <Path.LayoutTransform>
                            <ScaleTransform ScaleY="0.667" ScaleX="0.667"/>
                        </Path.LayoutTransform>
                        <Path.Stroke>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFB7C2E3" Offset="0.2"/>
                                        <GradientStop Color="#A0FFFFFF" Offset="0.9"/>
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Path.Stroke>
                    </Path>
                    <Button Grid.Column="0" Margin="3,0,1,0" Style="{StaticResource NavigationWindowBackButtonStyle}">
                        <Button.LayoutTransform>
                            <ScaleTransform ScaleY="0.667" ScaleX="0.667"/>
                        </Button.LayoutTransform>
                    </Button>
                    <Button Grid.Column="1" Margin="1,0,0,0" Style="{StaticResource NavigationWindowForwardButtonStyle}">
                        <Button.LayoutTransform>
                            <ScaleTransform ScaleY="0.667" ScaleX="0.667"/>
                        </Button.LayoutTransform>
                    </Button>
                </Grid>
                <ContentPresenter x:Name="PART_FrameCP"/>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="CanGoForward" Value="false"/>
                    <Condition Property="CanGoBack" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="IsEnabled" TargetName="NavMenu" Value="false"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>-->
    
    <Style x:Key="FrameStyle" TargetType="{x:Type Frame}">
        <Setter Property="NavigationUIVisibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Frame}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter DataContext="{TemplateBinding DataContext}" x:Name="PART_FrameCP"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="NavigationUIVisibility" Value="Visible">
                <Setter Property="Template" Value="{StaticResource FrameNavChromeTemplateKey}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="JournalOwnership" Value="OwnsJournal"/>
                    <Condition Property="NavigationUIVisibility" Value="Automatic"/>
                </MultiTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource FrameNavChromeTemplateKey}"/>
            </MultiTrigger>
        </Style.Triggers>-->
    </Style>

</ResourceDictionary>